openapi: 3.0.0
info:
  title: Products API
  version: 1.0.0
  description: API for product management

tags:
  - name: Products
    description: Product management endpoints

paths:
  /api/products:
    get:
      tags: [Products]
      summary: Get all products
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Filter by main category
        - in: query
          name: subCategory
          schema:
            type: string
          description: Filter by sub-category
        - in: query
          name: bestseller
          schema:
            type: boolean
          description: Filter bestsellers only
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Limit number of products returned
      responses:
        200:
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        500:
          description: Server error

  /api/products/{id}:
    get:
      tags: [Products]
      summary: Get a single product by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Product ID
      responses:
        200:
          description: Product data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Product not found
        500:
          description: Server error
    put:
      tags: [Products]
      summary: Update a product (Admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Product ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductUpdateRequest'
      responses:
        200:
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        400:
          description: Invalid input
        401:
          description: Unauthorized
        403:
          description: Forbidden (admin only)
        404:
          description: Product not found
        500:
          description: Server error
    delete:
      tags: [Products]
      summary: Delete a product (Admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Product ID
      responses:
        200:
          description: Product deleted successfully
        401:
          description: Unauthorized
        403:
          description: Forbidden (admin only)
        404:
          description: Product not found
        500:
          description: Server error

  /api/products/add:
    post:
      tags: [Products]
      summary: Add a new product (Admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
      responses:
        201:
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        400:
          description: Invalid input
        401:
          description: Unauthorized
        403:
          description: Forbidden (admin only)
        500:
          description: Server error

components:
  schemas:
    Product:
      type: object
      required:
        - _id
        - name
        - description
        - price
        - category
        - subCategory
        - sizes
      properties:
        _id:
          type: string
          description: The custom ID of the product
          example: "prod_12345"
        name:
          type: string
          example: "Premium Wireless Headphones"
        description:
          type: string
          example: "Noise cancelling wireless headphones with 30hr battery"
        price:
          type: number
          format: float
          example: 299.99
        images:
          type: array
          items:
            type: string
            format: uri
          example: ["https://example.com/image1.jpg", "https://example.com/image2.jpg"]
        category:
          type: string
          example: "Electronics"
        subCategory:
          type: string
          example: "Audio"
        sizes:
          type: array
          items:
            type: string
          example: ["S", "M", "L","LG","XL","XXL"]
        date:
          type: string
          format: date-time
          example: "2023-07-20T12:00:00Z"
        bestseller:
          type: boolean
          default: false

    ProductCreateRequest:
      type: object
      required:
        - _id
        - name
        - description
        - price
        - category
        - subCategory
        - sizes
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        images:
          type: array
          items:
            type: string
            format: binary
        category:
          type: string
        subCategory:
          type: string
        sizes:
          type: array
          items:
            type: string
        bestseller:
          type: boolean

    ProductUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        images:
          type: array
          items:
            type: string
            format: binary
        category:
          type: string
        subCategory:
          type: string
        sizes:
          type: array
          items:
            type: string
        bestseller:
          type: boolean

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT