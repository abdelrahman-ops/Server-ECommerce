openapi: 3.0.0
info:
  title: Cart API
  version: 1.0.0
  description: API for shopping cart operations

tags:
  - name: Cart
    description: Shopping cart management

paths:
  /api/cart/add:
    post:
      tags: [Cart]
      summary: Add product to cart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemRequest'
      responses:
        200:
          description: Product added to cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        400:
          description: Invalid input
        401:
          description: Unauthorized
        500:
          description: Server error

  /api/cart/transfer:
    post:
      tags: [Cart]
      summary: Transfer cart items (e.g., from guest to authenticated user)
      security:
        - bearerAuth: []
      responses:
        200:
          description: Cart transferred successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        401:
          description: Unauthorized
        500:
          description: Server error

  /api/cart/get:
    get:
      tags: [Cart]
      summary: Get user's cart
      security:
        - bearerAuth: []
      responses:
        200:
          description: Cart retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        401:
          description: Unauthorized
        404:
          description: Cart not found
        500:
          description: Server error

  /api/cart/update:
    put:
      tags: [Cart]
      summary: Update cart items
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CartItemRequest'
      responses:
        200:
          description: Cart updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        400:
          description: Invalid input
        401:
          description: Unauthorized
        500:
          description: Server error

  /api/cart/delete-one-product:
    delete:
      tags: [Cart]
      summary: Remove one product from cart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                size:
                  type: string
              required:
                - productId
                - size
      responses:
        200:
          description: Product removed from cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        401:
          description: Unauthorized
        404:
          description: Product not found in cart
        500:
          description: Server error

  /api/cart/clear-cart:
    delete:
      tags: [Cart]
      summary: Clear entire cart
      security:
        - bearerAuth: []
      responses:
        200:
          description: Cart cleared successfully
        401:
          description: Unauthorized
        500:
          description: Server error

components:
  schemas:
    Cart:
      type: object
      properties:
        user:
          type: string
          description: User ID
          example: "60d21b4667d0d8992e610c85"
        products:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
        createdAt:
          type: string
          format: date-time
          example: "2023-07-20T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2023-07-20T12:00:00Z"

    CartItem:
      type: object
      required:
        - productId
        - quantity
        - size
        - price
      properties:
        productId:
          type: string
          description: Product ID
          example: "prod_12345"
        quantity:
          type: integer
          minimum: 1
          example: 2
        size:
          type: string
          example: "M"
        price:
          type: number
          example: 59.99

    CartItemRequest:
      type: object
      required:
        - productId
        - quantity
        - size
        - price
      properties:
        productId:
          type: string
        quantity:
          type: integer
          minimum: 1
        size:
          type: string
        price:
          type: number

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT